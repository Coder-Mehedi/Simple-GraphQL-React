{"version":3,"sources":["logo.png","components/LaunchItems.js","components/MissionKey.js","components/Launches.js","components/Launch.js","App.js","index.js"],"names":["module","exports","LaunchItems","launch","flight_number","mission_name","launch_date_local","launch_success","className","format","to","MissionKey","LAUNCHES_QUERY","gql","Launches","useQuery","loading","error","data","message","launches","map","key","LAUNCH_QUERY","Launch","match","params","parseInt","variables","launch_year","rocket","rocket_id","rocket_name","rocket_type","classNames","client","ApolloClient","uri","App","src","logo","alt","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,kC,gNCwB5BC,EAnBK,SAAC,GAAkF,IAAD,IAAhFC,OAAUC,EAAsE,EAAtEA,cAAeC,EAAuD,EAAvDA,aAAcC,EAAyC,EAAzCA,kBAAmBC,EAAsB,EAAtBA,eAC5E,OACI,yBAAKC,UAAU,uBACX,yBAAKA,UAAU,OACX,yBAAKA,UAAU,YACX,wCAAa,0BAAMA,UAAWA,IAAU,CACpC,eAAgBD,EAChB,eAAgBA,KACdF,IACN,oCAAS,kBAAC,IAAD,CAAQI,OAAO,oBAAqBH,KAEjD,yBAAKE,UAAU,YACX,kBAAC,IAAD,CAAMA,UAAU,oBAAoBE,GAAE,kBAAaN,IAAnD,sBCFLO,EAbI,WACf,OACI,yBAAKH,UAAU,QACX,2BACI,0BAAMA,UAAU,yBADpB,cAGA,2BACI,0BAAMA,UAAU,wBADpB,a,sPCFZ,IAAMI,EAAiBC,IAAH,KA0BLC,EAfE,WAAO,IAAD,EACcC,YAASH,GAAlCI,EADW,EACXA,QAASC,EADE,EACFA,MAAOC,EADL,EACKA,KACxB,OAAIF,EAAgB,aAChBC,EAAa,UAAN,OAAiBA,EAAME,SAG9B,kBAAC,WAAD,KACI,kBAAC,EAAD,MACCD,EAAKE,SAASC,KAAI,SAAAlB,GAAM,OACrB,kBAAC,EAAD,CAAaA,OAAQA,EAAQmB,IAAKnB,EAAOE,oB,2bCpBzD,IAAMkB,EAAeV,IAAH,KAoDHW,EAnCA,SAAC,GAAe,IACtBpB,EADqB,EAAZqB,MACeC,OAAxBtB,cACLA,EAAgBuB,SAASvB,GAFC,MAGMW,YAASQ,EAAc,CACnDK,UAAW,CAACxB,mBADTY,EAHmB,EAGnBA,QAASC,EAHU,EAGVA,MAAOC,EAHG,EAGHA,KAGvB,GAAGF,EAAS,OAAO,0CACnB,GAAGC,EAAO,OAAO,4BAAKA,GAPI,MAS6DC,EAAKf,OADpFE,EARkB,EAQlBA,aAAcwB,EARI,EAQJA,YACtBtB,EAT0B,EAS1BA,eAT0B,KASVD,kBATU,EASSwB,QAAUC,EATnB,EASmBA,UAAWC,EAT9B,EAS8BA,YAAaC,EAT3C,EAS2CA,YAErE,OACI,kBAAC,WAAD,KACI,wBAAIzB,UAAU,kBAAiB,0BAAMA,UAAU,aAAhB,YAA/B,IAA4EH,GAC5E,wBAAIG,UAAU,QAAd,kBACA,wBAAIA,UAAU,cACV,wBAAIA,UAAU,mBAAd,kBAAgDJ,GAChD,wBAAII,UAAU,mBAAd,gBAA8CqB,GAC9C,wBAAIrB,UAAU,mBAAd,uBAAoD,0BAAMA,UAAW0B,IAAW,CAC5E,eAAgB3B,EAChB,eAAgBA,KACfA,EAAiB,MAAO,QAEjC,wBAAIC,UAAU,QAAd,kBACA,wBAAIA,UAAU,cACV,wBAAIA,UAAU,mBAAd,cAA4CuB,GAC5C,wBAAIvB,UAAU,mBAAd,gBAA8CwB,GAC9C,wBAAIxB,UAAU,mBAAd,gBAA8CyB,IAElD,6BACA,kBAAC,IAAD,CAAMvB,GAAG,IAAIF,UAAU,qBAAvB,U,gDC5CN2B,EAAS,IAAIC,IAAa,CAC9BC,IAAK,aAiBQC,MAdf,WACE,OACE,kBAAC,IAAD,CAAgBH,OAAQA,GACtB,kBAAC,IAAD,KACE,yBAAK3B,UAAU,iBACb,yBAAK+B,IAAKC,IAAMC,IAAI,cAAcjC,UAAU,SAC5C,kBAAC,IAAD,CAAOkC,OAAK,EAACC,KAAK,IAAIC,UAAW9B,IACjC,kBAAC,IAAD,CAAO4B,OAAK,EAACC,KAAK,yBAA0BC,UAAWpB,QChBjEqB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.53146e69.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ab10d000.png\";","import React from 'react'\nimport className from 'classnames'\nimport Moment from 'react-moment'\nimport { Link } from 'react-router-dom'\n\nconst LaunchItems = ({launch: { flight_number, mission_name, launch_date_local, launch_success} }) => {\n    return (\n        <div className=\"card card-body mb-3\">\n            <div className=\"row\">\n                <div className=\"col-md-9\">\n                    <h4>Mission: <span className={className({\n                        'text-success': launch_success,\n                        'text-danger': !launch_success\n                    })}>{ mission_name }</span></h4>\n                    <p>Date: <Moment format=\"YYYY-MM-DD HH:mm\">{ launch_date_local}</Moment></p>\n                </div>\n                <div className=\"col-md-3\">\n                    <Link className=\"btn btn-secondary\" to={`/launch/${flight_number}`}>Launch Details</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LaunchItems\n","import React from 'react'\n\nconst MissionKey = () => {\n    return (\n        <div className=\"my-3\">\n            <p>\n                <span className=\"px-3 mr-2 bg-success\" /> = Success\n            </p>\n            <p>\n                <span className=\"px-3 mr-2 bg-danger\" /> = Fail\n            </p>\n        </div>\n    )\n}\n\nexport default MissionKey\n","import React, { Fragment } from 'react'\nimport gql from 'graphql-tag'\nimport { useQuery } from '@apollo/react-hooks'\nimport LaunchItems from './LaunchItems'\nimport MissionKey from './MissionKey'\n\nconst LAUNCHES_QUERY = gql`\n    query Launch_Query{\n        launches {\n            flight_number\n            mission_name\n            launch_date_local\n            launch_success\n        }\n    }\n`\n\nconst Launches = () => {\n    const { loading, error, data } = useQuery(LAUNCHES_QUERY)\n    if (loading) return 'Loading...';\n    if (error) return `Error! ${error.message}`;\n\n    return (\n        <Fragment>\n            <MissionKey />\n            {data.launches.map(launch => (\n                <LaunchItems launch={launch} key={launch.mission_name}/>\n            ))}\n        </Fragment>\n    )\n}\n\nexport default Launches\n","import React, { Fragment } from 'react'\nimport gql from 'graphql-tag'\nimport { useQuery } from '@apollo/react-hooks'\nimport { Link } from 'react-router-dom'\nimport classNames from 'classnames'\n\nconst LAUNCH_QUERY = gql`\n    query LaunchQuery($flight_number: Int!){\n        launch(flight_number: $flight_number) {\n            flight_number\n            mission_name\n            launch_year\n            launch_success\n            launch_date_local\n            rocket {\n                rocket_id\n                rocket_name\n                rocket_type\n            }\n        }\n    }\n`\n\nconst Launch = ({ match }) => {\n    let {flight_number } = match.params\n    flight_number = parseInt(flight_number)\n    const {loading, error, data } = useQuery(LAUNCH_QUERY, {\n        variables: {flight_number} })\n\n    if(loading) return <h4>Loading...</h4>\n    if(error) return <h6>{error}</h6>\n    const { mission_name, launch_year,\n    launch_success, launch_date_local, rocket: { rocket_id, rocket_name, rocket_type } } = data.launch\n\n    return (\n        <Fragment>\n            <h1 className=\"display-4 my-3\"><span className=\"text-dark\">Mission:</span> {mission_name}</h1>\n            <h4 className=\"mb-3\">Launch Details</h4>\n            <ul className=\"list-group\">\n                <li className=\"list-group-item\">Flight Number: {flight_number}</li>\n                <li className=\"list-group-item\">Launch Year: {launch_year}</li>\n                <li className=\"list-group-item\">Luanch Successfull: <span className={classNames({\n                    'text-success': launch_success,\n                    'text-danger': !launch_success\n                })}>{launch_success ? 'Yes': 'No'}</span></li>\n            </ul>\n            <h4 className=\"my-3\">Rocket Details</h4>\n            <ul className=\"list-group\">\n                <li className=\"list-group-item\">Rocket Id: {rocket_id}</li>\n                <li className=\"list-group-item\">Rocket Name: {rocket_name}</li>\n                <li className=\"list-group-item\">Rocket Type: {rocket_type}</li>\n            </ul>\n            <hr/>\n            <Link to=\"/\" className=\"btn btn-secondary\">Back</Link>\n        </Fragment>\n    )\n}\n\nexport default Launch\n","import React from 'react';\nimport Launches from './components/Launches'\nimport Launch from './components/Launch'\nimport ApolloClient from 'apollo-boost'\nimport { ApolloProvider } from '@apollo/react-hooks'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport './App.css'\nimport logo from './logo.png'\n\nconst client = new ApolloClient({\n  uri: '/graphql'\n})\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n        <div className=\"App container\">\n          <img src={logo} alt=\"SpaceX Logo\" className=\"logo\"/>\n          <Route exact path=\"/\" component={Launches} />\n          <Route exact path=\"/launch/:flight_number\"  component={Launch} />\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}